//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(taskApi.DAL.TaskApiContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets6d7e5b9111730b1cfaf7c0958997cad4421768e969f0e4b1af0e1f6a86cb5356))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets6d7e5b9111730b1cfaf7c0958997cad4421768e969f0e4b1af0e1f6a86cb5356 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "6d7e5b9111730b1cfaf7c0958997cad4421768e969f0e4b1af0e1f6a86cb5356"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.ApplicationHoliday")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.User")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.Calendar")
            {
                return GetView2();
            }

            if (extentName == "TaskApiContext.ApplicationHolidays")
            {
                return GetView3();
            }

            if (extentName == "TaskApiContext.Users")
            {
                return GetView4();
            }

            if (extentName == "TaskApiContext.Calendars")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.Customer")
            {
                return GetView6();
            }

            if (extentName == "TaskApiContext.Customers")
            {
                return GetView7();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.ApplicationHoliday.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ApplicationHoliday
        [CodeFirstDatabaseSchema.ApplicationHoliday](T1.ApplicationHoliday_Id, T1.ApplicationHoliday_ApplicationType, T1.ApplicationHoliday_UserID, T1.ApplicationHoliday_DateFrom, T1.ApplicationHoliday_DateTo, T1.ApplicationHoliday_AproveID, T1.ApplicationHoliday_DateCreate, T1.ApplicationHoliday_DateUpdate)
    FROM (
        SELECT 
            T.Id AS ApplicationHoliday_Id, 
            CAST(T.ApplicationType AS [Edm.Int32]) AS ApplicationHoliday_ApplicationType, 
            T.UserID AS ApplicationHoliday_UserID, 
            T.DateFrom AS ApplicationHoliday_DateFrom, 
            T.DateTo AS ApplicationHoliday_DateTo, 
            T.AproveID AS ApplicationHoliday_AproveID, 
            T.DateCreate AS ApplicationHoliday_DateCreate, 
            T.DateUpdate AS ApplicationHoliday_DateUpdate, 
            True AS _from0
        FROM TaskApiContext.ApplicationHolidays AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing User
        [CodeFirstDatabaseSchema.User](T1.User_Id, T1.User_Email, T1.User_PasswordHash, T1.User_Salt, T1.User_RoleApp, T1.User_DateCreate, T1.User_DateUpdate)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.Email AS User_Email, 
            T.PasswordHash AS User_PasswordHash, 
            T.Salt AS User_Salt, 
            CAST(T.RoleApp AS [Edm.Int32]) AS User_RoleApp, 
            T.DateCreate AS User_DateCreate, 
            T.DateUpdate AS User_DateUpdate, 
            True AS _from0
        FROM TaskApiContext.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Calendar.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Calendar
        [CodeFirstDatabaseSchema.Calendar](T1.Calendar_Id, T1.Calendar_UserID, T1.Calendar_HolidayType, T1.Calendar_Day, T1.Calendar_DateCreate, T1.Calendar_DateUpdate)
    FROM (
        SELECT 
            T.Id AS Calendar_Id, 
            T.UserID AS Calendar_UserID, 
            CAST(T.HolidayType AS [Edm.Int32]) AS Calendar_HolidayType, 
            T.Day AS Calendar_Day, 
            T.DateCreate AS Calendar_DateCreate, 
            T.DateUpdate AS Calendar_DateUpdate, 
            True AS _from0
        FROM TaskApiContext.Calendars AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for TaskApiContext.ApplicationHolidays.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ApplicationHolidays
        [taskApi.DAL.ApplicationHoliday](T1.ApplicationHoliday_Id, T1.ApplicationHoliday_ApplicationType, T1.ApplicationHoliday_UserID, T1.ApplicationHoliday_DateFrom, T1.ApplicationHoliday_DateTo, T1.ApplicationHoliday_AproveID, T1.ApplicationHoliday_DateCreate, T1.ApplicationHoliday_DateUpdate)
    FROM (
        SELECT 
            T.Id AS ApplicationHoliday_Id, 
            CAST(T.ApplicationType AS [taskApi.DAL.ApplicationType]) AS ApplicationHoliday_ApplicationType, 
            T.UserID AS ApplicationHoliday_UserID, 
            T.DateFrom AS ApplicationHoliday_DateFrom, 
            T.DateTo AS ApplicationHoliday_DateTo, 
            T.AproveID AS ApplicationHoliday_AproveID, 
            T.DateCreate AS ApplicationHoliday_DateCreate, 
            T.DateUpdate AS ApplicationHoliday_DateUpdate, 
            True AS _from0
        FROM CodeFirstDatabase.ApplicationHoliday AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for TaskApiContext.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [taskApi.DAL.User](T1.User_Id, T1.User_Email, T1.User_PasswordHash, T1.User_Salt, T1.User_RoleApp, T1.User_DateCreate, T1.User_DateUpdate)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.Email AS User_Email, 
            T.PasswordHash AS User_PasswordHash, 
            T.Salt AS User_Salt, 
            CAST(T.RoleApp AS [taskApi.DAL.RoleApp]) AS User_RoleApp, 
            T.DateCreate AS User_DateCreate, 
            T.DateUpdate AS User_DateUpdate, 
            True AS _from0
        FROM CodeFirstDatabase.User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for TaskApiContext.Calendars.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Calendars
        [taskApi.DAL.Calendar](T1.Calendar_Id, T1.Calendar_UserID, T1.Calendar_HolidayType, T1.Calendar_Day, T1.Calendar_DateCreate, T1.Calendar_DateUpdate)
    FROM (
        SELECT 
            T.Id AS Calendar_Id, 
            T.UserID AS Calendar_UserID, 
            CAST(T.HolidayType AS [taskApi.DAL.HolidayType]) AS Calendar_HolidayType, 
            T.Day AS Calendar_Day, 
            T.DateCreate AS Calendar_DateCreate, 
            T.DateUpdate AS Calendar_DateUpdate, 
            True AS _from0
        FROM CodeFirstDatabase.Calendar AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Customer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customer
        [CodeFirstDatabaseSchema.Customer](T1.Customer_Id, T1.Customer_Name, T1.Customer_Address, T1.Customer_Phone, T1.Customer_Image, T1.Customer_DateCreate, T1.Customer_DateUpdate)
    FROM (
        SELECT 
            T.Id AS Customer_Id, 
            T.Name AS Customer_Name, 
            T.Address AS Customer_Address, 
            T.Phone AS Customer_Phone, 
            T.Image AS Customer_Image, 
            T.DateCreate AS Customer_DateCreate, 
            T.DateUpdate AS Customer_DateUpdate, 
            True AS _from0
        FROM TaskApiContext.Customers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for TaskApiContext.Customers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customers
        [taskApi.DAL.Customer](T1.Customer_Id, T1.Customer_Name, T1.Customer_Address, T1.Customer_Phone, T1.Customer_Image, T1.Customer_DateCreate, T1.Customer_DateUpdate)
    FROM (
        SELECT 
            T.Id AS Customer_Id, 
            T.Name AS Customer_Name, 
            T.Address AS Customer_Address, 
            T.Phone AS Customer_Phone, 
            T.Image AS Customer_Image, 
            T.DateCreate AS Customer_DateCreate, 
            T.DateUpdate AS Customer_DateUpdate, 
            True AS _from0
        FROM CodeFirstDatabase.Customer AS T
    ) AS T1");
        }
    }
}
